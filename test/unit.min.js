/*! jom 0.0.2 |                  @author Valtid Caushi                  @date 14-09-2015 */

var a,asset;asset="",a="",describe("Asset",function(){return beforeEach(function(){return asset="",a=""}),it("should exist",function(){return asset="<link rel='asset' source='test' type='text/plain' />",a=new Asset(asset),expect(a).toBeDefined()}),it("should have properties",function(){return asset="<link rel='asset' source='test' type='text/plain' asset=plain />",a=new Asset(asset),expect(a.rel).toBeDefined(),expect(a.name).toBeDefined(),expect(a.source).toBeDefined(),expect(a.original).toBeDefined(),expect(a.clone).toBeDefined(),expect(a.asset).toBeDefined(),expect(a.content_type).toBeDefined(),expect(a.content_type.full).toBeDefined(),expect(a.content_type.part).toBeDefined(),expect(a.content_type.type).toBeDefined(),expect(a.content_type.media).toBeDefined(),expect(a.content_type.params).toBeDefined(),expect(a.element).toBeDefined(),expect(a.create_element).toBeDefined()}),it("should throw error if type if not defined",function(){return asset="<link source='test' />",expect(function(){return a=new Asset(asset)}).toThrow(new Error("jom: rel=asset is required"))}),it("should throw error if type if not defined",function(){return asset="<link rel='asset' source='test' />",expect(function(){return a=new Asset(asset)}).toThrow(new Error("jom: asset type is required"))}),it("should throw error if type if not valid",function(){return asset="<link rel='asset' source='test' type='not/good' />",expect(function(){return a=new Asset(asset)}).toThrow(new Error("jom: asset media `not/good` type is not valid"))}),it("should accept content type params",function(){return asset="<link rel='asset' source='test' type='text/css; charset=utf-8' asset=css />",a=new Asset(asset),expect(a.name).toBe(null),expect(a.rel).toBe("asset"),expect(a.source).toBe("test"),expect(a.clone.length).toBe(1),expect(a.content_type.full).toBe("text/css; charset=utf-8"),expect(a.content_type.part).toBe("text/css"),expect(a.content_type.type).toBe("text"),expect(a.content_type.media).toBe("css"),expect(a.content_type.params).toBe("charset=utf-8")}),it("should accept css",function(){return asset="<link rel='asset' source='test' type='text/css' asset=css />",a=new Asset(asset),expect(a.name).toBe(null),expect(a.rel).toBe("asset"),expect(a.source).toBe("test"),expect(a.clone.length).toBe(1),expect(a.content_type.full).toBe("text/css"),expect(a.content_type.part).toBe("text/css"),expect(a.content_type.type).toBe("text"),expect(a.content_type.media).toBe("css"),expect(a.content_type.params).toBe(null)}),it("should accept template",function(){return asset="<link rel='asset' source='test' type='text/html' asset=template />",a=new Asset(asset),expect(a.name).toBe(null),expect(a.rel).toBe("asset"),expect(a.source).toBe("test"),expect(a.clone.length).toBe(1),expect(a.content_type.full).toBe("text/html"),expect(a.content_type.part).toBe("text/html"),expect(a.content_type.type).toBe("text"),expect(a.content_type.media).toBe("html"),expect(a.content_type.params).toBe(null)}),it("should accept javascript",function(){return asset="<link rel='asset' source='test' type='text/javascript' asset=javascript />",a=new Asset(asset),expect(a.name).toBe(null),expect(a.rel).toBe("asset"),expect(a.source).toBe("test"),expect(a.clone.length).toBe(1),expect(a.content_type.full).toBe("text/javascript"),expect(a.content_type.part).toBe("text/javascript"),expect(a.content_type.type).toBe("text"),expect(a.content_type.media).toBe("javascript"),expect(a.content_type.params).toBe(null)}),it("should accept json",function(){return asset="<link rel='asset' source='test' type='text/json'  asset=collection />",a=new Asset(asset),expect(a.name).toBe(null),expect(a.rel).toBe("asset"),expect(a.source).toBe("test"),expect(a.clone.length).toBe(1),expect(a.content_type.full).toBe("text/json"),expect(a.content_type.part).toBe("text/json"),expect(a.content_type.type).toBe("text"),expect(a.content_type.media).toBe("json"),expect(a.content_type.params).toBe(null)}),xit("should accept collection",function(){return asset="<link rel='asset' source='test' type='text/collection' />",a=new Asset(asset),expect(a.name).toBe(null),expect(a.rel).toBe("asset"),expect(a.source).toBe("test"),expect(a.clone.length).toBe(1),expect(a.content_type.full).toBe("text/collection"),expect(a.content_type.part).toBe("text/collection"),expect(a.content_type.type).toBe("text"),expect(a.content_type.media).toBe("collection"),expect(a.content_type.params).toBe(null)})});var collection;collection={},describe("collections: ",function(){return beforeEach(function(){var a;return collection={},a=null}),it("should exists",function(){return expect(Collection).toBeDefined(),expect(jjv).toBeDefined()}),it("should have the following properties",function(){var a;return a=[{name:"valtid"}],collection=new Collection("profile",a),expect(collection.name).toBeDefined(),expect(collection.data).toBeDefined(),expect(collection.schema).toEqual({}),expect(collection.errors).toEqual(null),expect(collection.observing).toEqual(!1),expect(collection.attach_data).toBeDefined(),expect(collection.attach_schema).toBeDefined(),expect(collection.errors_to_string).toBeDefined(),expect(collection.is_valid).toBeDefined(),expect(collection.join).toBeDefined(),expect(collection.findByPath).toBeDefined()}),it("should fail to add a new collection",function(){return expect(function(){return new Collection}).toThrow(new Error("jom: collection name is required"))}),it("should check if data is null",function(){return collection=new Collection("profile"),collection.attach_data(null),expect(collection.data).toEqual([])}),it("should check if schema is null",function(){return collection=new Collection("profile"),collection.attach_schema(null),expect(collection.schema).toEqual({})}),describe("errors; ",function(){return it("should get errors in a string",function(){var a,b,c;return a={name:"Valtid"},c={$schema:"http://json-schema.org/draft-04/schema#",title:"Profile",type:"number"},collection=new Collection("profile",a,c),b='{"validation":{"type":"number"}}',expect(collection.is_valid()).toEqual(!1),expect(collection.errors).not.toEqual(null),expect(collection.errors_to_string()).toBe(b)})}),describe("adding; ",function(){return it("should add a new simple collection",function(){return collection=new Collection("profile"),expect(collection.name).toEqual("profile"),expect(collection.data).toEqual([]),expect(collection.schema).toEqual({}),expect(collection.is_valid()).toEqual(!0)}),it("should add collection with data as array",function(){var a;return a=[{name:"valtid"}],collection=new Collection("profile",a),expect(collection.name).toEqual("profile"),expect(collection.data).toEqual(a),expect(collection.schema).toEqual({}),expect(collection.is_valid()).toEqual(!0)}),it("should add collection with data as object",function(){var a;return a={name:"Valtid"},collection=new Collection("profile",a),expect(collection.name).toEqual("profile"),expect(collection.data).toEqual([a]),expect(collection.schema).toEqual({}),expect(collection.is_valid()).toEqual(!0)})}),describe("Schema; ",function(){return it("should fail to add collection without $schema",function(){var a,b;return a={name:"Valtid"},b={title:"Profile",type:"array",items:{title:"Collection",type:"object",properties:{name:{title:"Name of person",type:"string"}},required:["name"]}},collection=new Collection("profile",a,b),expect(collection.schema.$schema).not.toBeDefined(),expect(function(){return collection.is_valid()}).toThrow(new Error("jom: $schema is missing"))}),it("should fail to be valid return false",function(){var a,b;return a={name:"Valtid"},b={$schema:"http://json-schema.org/draft-04/schema#",title:"Profile",type:"array",items:{title:"Collection",type:"object",properties:{name:{title:"Name of person",type:"number"}},required:["name"]}},collection=new Collection("profile",a,b),expect(collection.is_valid()).toBe(!1)}),it("should add collection with $schema",function(){var a,b;return a={name:"Valtid"},b={$schema:"http://json-schema.org/draft-04/schema#",title:"Profile",type:"array",items:{title:"Profile",type:"object",properties:{name:{title:"Name of person",type:"string"}},required:["name"]}},collection=new Collection("profile",a,b),expect(collection.is_valid()).toEqual(!0)})}),describe("join; ",function(){return it("should join two or more strings to json path",function(){var a;return collection=new Collection("profile"),a=collection,expect(a.join("person","name")).toEqual("person.name"),expect(a.join("person[0]","name")).toEqual("person[0].name"),expect(a.join("person","[0].name")).toEqual("person[0].name"),expect(a.join("person","name","first")).toEqual("person.name.first")})}),describe("find; ",function(){return it("should find a string ",function(){var a;return a={name:"Valtid",gender:"Male"},collection=new Collection("profile",a),expect(collection.findByPath("[0].name")).toEqual("Valtid"),expect(collection.findByPath("[0].gender")).toEqual("Male")}),it("should find an object",function(){var a;return a={name:"Valtid",gender:"Male"},collection=new Collection("profile",a),expect(collection.findByPath("[0]")).toEqual(a)}),it("should not find undefined",function(){var a;return a=void 0,collection=new Collection("profile",a),collection.data=void 0,expect(collection.findByPath("[0]")).toEqual(a)})})});var component;component={},describe("components:: ",function(){return beforeEach(function(){return component={},$("foot").html(""),$("body").html(""),$("head link[rel=asset]").remove(),$("component").remove()}),it("should exists",function(){return expect(Component).toBeDefined()}),it("should have properties defined",function(){var a;return a="<component template=profile collections=profile />",component=new Component(a),expect(component.attr).toBeDefined(),expect(component.template).toBeDefined(),expect(component.collections).toBeDefined(),expect(component.path).toBeDefined(),expect(component.element).toBeDefined(),expect(component.events).toBeDefined(),expect(component.ready).toBeDefined(),expect(component.hide).toBeDefined(),expect(component.show).toBeDefined(),expect(component.enable).toBeDefined(),expect(component.disable).toBeDefined(),expect(component.destroy).toBeDefined(),expect(component.create_shadow).toBeDefined(),expect(component.define_template).toBeDefined(),expect(component.define_collection).toBeDefined(),expect(component.attr).toEqual({template:"profile",collections:"profile"}),expect(component.root).not.toEqual(null),expect(component.element.shadowRoot).not.toEqual(null),expect(component.handlebars).toBeDefined(),expect(component.handle_template_scripts).toBeDefined(),expect(component.trigger).toBeDefined(),expect(component.on).toBeDefined()}),describe("required properties",function(){return it("should fail no arguments",function(){return expect(function(){return component=new Component}).toThrow(new Error("jom: component is required"))}),it("should fail no template",function(){var a;return a="<component />",expect(function(){return new Component(a)}).toThrow(new Error("jom: component template is required"))}),it("should fail no collections",function(){var a;return a="<component template=profile />",expect(function(){return component=new Component(a)}).toThrow(new Error("jom: component collections is required"))}),it("should pass and set component to element",function(){var a;return a="<component template=profile collections=profile />",component=new Component(a),expect(component.element.component).toBe(!0)})}),describe("handle_template_scripts; ",function(){return it("should wrap script tags, for encapsulatation",function(){var a,b,c,d;return a="<component template=profile collections=profile />",component=new Component(a),b="<div>\n  <div>Test</div>\n  <script> var a = 1; </script>\n</div>",d=component.handle_template_scripts(b),c="(function(){\n          var\n          shadow      = jom.shadow,\n          body        = shadow.body,\n          host        = shadow.host,\n          root        = shadow.root,\n          component   = host.component,\n          collections = component.collections\n          ;\n          var a = 1;\n})()",d=$.trim($(d).text()).replace(/[\s]+/g," "),c=$.trim(c).replace(/[\s]+/g," "),expect(d).toEqual(c)})}),describe("handlebars; ",function(){return it("should replace handles with data",function(){var a,b,c,d,e,f;return d={handlebar:{and:{path:"thing"}},dog:["Rocky"]},b=new Collection("profile",d),a="<component template=profile collections=profile />",component=new Component(a),component.define_collection(b),c="<div>\n  <div>I will test</div>\n  <div>some\n    '\n    <span>${0:[0].handlebar.and.path}</span>\n    '\n    even if it has an array\n    '\n    <span>${0:[0].dog[0]}</span>\n    '\n  </div>\n</div>",f=component.handlebars(c,component),e="I will test some ' thing ' even if it has an array ' Rocky '",f=$.trim($(f).text()).replace(/[\s]+/g," "),e=$.trim(e).replace(/[\s]+/g," "),expect(component.handles.length).toEqual(2),expect(f).toEqual(e)}),it("should replace handles attributes with data",function(){var a,b,c,d,e,f;return jom.env="dev",d={handlebar:{and:{path:"thing"}},dog:["Rocky"]},b=new Collection("profile",d),a="<component template=profile collections=profile />",component=new Component(a),component.define_collection(b),c='<div>\n  <div>I will test</div>\n  <div>some\n    <span>${0:[0].handlebar.and.path}</span>\n    even if it has an array\n    <span value="${0:[0].dog[0]}"></span>\n  </div>\n</div>',f=component.handlebars(c,component),e="I will test some thing even if it has an array",f=$.trim($(f).text()).replace(/[\s]+/g," "),e=$.trim(e).replace(/[\s]+/g," "),expect(component.handles.length).toEqual(2),expect(f).toEqual(e)})}),describe("defines; ",function(){return it("should define a template",function(){var a,b,c;return a="<component template=profile collections=profile />",component=new Component(a),b="<template name=user schemas=users><div body></div></template>",c=new Template(b),component.define_template(c),expect(component.template).toBe(c)}),it("should throw an error when defining a template",function(){var a,b;return a="<component template=profile collections=profile />",component=new Component(a),b="<template name=user schemas=users><div body></div></template>",expect(function(){return component.define_template(b)}).toThrow(new Error("jom: template cant be added"))}),it("should define a collections",function(){var a,b,c;return a="<component template=profile collections=profile />",component=new Component(a),c=[{name:"valtid"}],b=new Collection("profile",c),component.define_collection(b),expect(component.collections[0]).toBe(b)}),it("should throw an error when defining a collections",function(){var a,b;return a="<component template=profile collections=profile />",component=new Component(a),b=[{name:"valtid"}],expect(function(){return component.define_collection(b)}).toThrow(new Error("jom: collection cant be added"))})}),describe("shadowRoot; ",function(){return it("should wrap if shadowRoot is not native",function(){var a,b,c;return b="<component template=profile collections=profile />",a=$(b),c=a.get(0),expect(c.createShadowRoot).toBeDefined(),component=new Component(c),expect(c.createShadowRoot).toBeDefined()})}),xdescribe("trigger; ",function(){return it("should trigger changes",function(){}),it("should trigger changes cover attributes",function(){}),it("should trigger changes and throw errors",function(){})}),describe("on event; ",function(){return it("should push events to the queue",function(){var a;return a="<component template=profile collections=profile />",component=new Component(a),expect(component.events.length).toEqual(0),component.on("change","name",function(){}),expect(component.events.length).toEqual(1),expect(component.events[0].path).toEqual("name"),expect(component.events[0].type).toEqual("change")})}),describe("trigger event; ",function(){return xit("should trigger all events that match path and type",function(){var a,b,c,d,e,f;return e=!1,a="<component template=profile collections=profile />",component=new Component(a),d=[{name:"valtid"}],c=new Collection("profile",d),component.define_collection(c),expect(component.events.length).toEqual(0),component.on("change","name",function(){return e=!0,expect(e).toEqual(!0)}),expect(component.events.length).toEqual(1),expect(component.events[0].path).toEqual("name"),expect(component.events[0].type).toEqual("change"),expect(e).toEqual(!1),b=[{path:"[0].name",value:"Valtid Caushi"}],f=component.trigger(b,c),expect(e).toEqual(!0)})}),describe("repeat; ",function(){return it("should repeat the same thing over and over",function(){var a,b,c,d,e,f;return a="<component template=profile collections=profile />",component=new Component(a),f='<div repeat="${0:[0].names}">\n  <div name="${name}"></div>\n</div>',c=[{names:[{name:"Valtid"},{name:"John"}]}],b=new Collection("profile",c),component.define_collection(b),e=component.repeat(f),d='<div repeat="${profile:[0].names}">\n  <div name="${name}"></div>\n  <div name="${name}"></div>\n</div>',expect(e.children().length).toEqual(2)})})});var link;link="",describe("jom: ",function(){return beforeEach(function(){return jom.components=[],$("foot").html(""),$("body").html(""),$("head link[rel=asset]").remove(),$("component").remove(),jom.assets=[]}),it("should be defined",function(){return expect(jom).toBeDefined()}),it("Key features to be present",function(){var a;return a=jom.shadow,expect(a).toBeDefined(),expect(window.Root).toBeDefined(),expect(jom.components).toBeDefined(),expect(jom.templates).toBeDefined(),expect(jom.collections).toBeDefined(),expect(jom.assets).toBeDefined(),expect(jom.schemas).toBeDefined(),expect(jom.load_components).toBeDefined(),expect(jom.load_templates).toBeDefined(),expect(jom.load_collections).toBeDefined(),expect(jom.load_assets).toBeDefined(),expect(jom.load_schemas).toBeDefined(),expect(jom.inject_assets).toBeDefined(),expect(jom.assemble_components).toBeDefined(),expect(jom.watch_collections).toBeDefined(),expect(jom.tasks).toBeDefined(),expect(jom.resolve).toBeDefined(),expect(jom.env).toBeDefined(),expect(jom.app).toBeDefined()}),it("path resolver",function(){return expect(jom.resolve("/location")).toBe("/location")}),it("path resolve default",function(){return expect(jom.resolve("location")).toBe("/location")}),describe("schemas, ",function(){return it("should push new schemas",function(){return expect(jom.schemas.length).toEqual(0),link="<link rel=asset source=data.json type='text/json' asset=schema />",$("head").append(link),jom.load_assets(),expect(jom.assets[0].queued).not.toBeDefined(),jom.inject_assets(),expect(jom.assets[0].queued).toBe(!0),$("foot script[asset=schema]").get(0).data={},jom.load_schemas(),expect(jom.schemas.length).toEqual(1),expect($("html>foot").length).toBe(1),expect($("html>foot").children().length).toBe(1)})}),describe("assets, ",function(){return it("should push new assets",function(){return expect(jom.assets.length).toEqual(0),link="<link rel=asset source=data.json type='text/json' asset=collection />",$("head").append(link),jom.load_assets(),expect(jom.assets.length).toEqual(1)}),it("should inject assets to the page",function(){return expect(jom.assets.length).toEqual(0),link="<link rel=asset source=data.json type='text/json' asset=collection />",$("head").append(link),jom.load_assets(),expect(jom.assets[0].queued).not.toBeDefined(),jom.inject_assets(),expect(jom.assets[0].queued).toBe(!0),expect(jom.assets.length).toEqual(1),expect($("html>foot").length).toBe(1),expect($("html>foot").children().length).toBe(1)})}),describe("component, ",function(){return it("should gather components",function(){var a;return expect(jom.components.length).toEqual(0),a="<component template=profile collections=profile />",$("body").append(a),jom.load_components(),expect(jom.components.length).toEqual(1)})}),describe("template, ",function(){return it("should gather templates",function(){var a,b,c,d;return expect(jom.templates).toEqual([]),expect(jom.templates.length).toEqual(0),link="<link rel=asset source=template.html type='text/html' asset=template />",c=$("foot>link[rel=import]"),expect($("head>link[rel=asset]").length).toEqual(0),$("head").append(link),expect($("head>link[rel=asset]").length).toEqual(1),expect(c.length).toEqual(0),a=document.implementation.createHTMLDocument("test"),d=a.createElement("template"),a.querySelector("head").appendChild(d),jom.load_assets(),jom.inject_assets(),$(c.selector).get(0)["import"]=a,b=$(c.selector).filter(function(b,c){return c["import"]=a,null!==c["import"]}),jom.load_templates(),expect($(c.selector).length).toEqual(1)})}),describe("collection, ",function(){return it("should gather collections",function(){var a;return expect(jom.collections).toEqual([]),a="<script source=data.json type='text/json' name=profile asset=collection />",$("foot").append(a),$('foot>script[source="data.json"]').get(0).data=[],jom.load_collections(),expect(jom.get("collection","profile")).toBeDefined()})}),describe("tasks, ",function(){return it("should cover tasks",function(){var a,b;return b="<link rel='asset' source='test' type='text/json' asset=collection />",a=new Asset(b),jom.assets.push(a),expect(jom.assets.length).toEqual(1),jom.tasks()})}),describe("assemble, ",function(){return xit("should assemble a component",function(){var a,b,c,d,e,f,g,h,i,j;return c="<component template=profile collections=profile />",expect($("body>component").length).toEqual(0),$("body").append(c),expect($("body>component").length).toEqual(1),a=$(c),i="<template name=profile><div body></div></template>",j=new Template(i),g=[{name:"valtid"}],d=new Collection("profile",g),jom.collections.profile=d,jom.templates.profile=j,jom.load_components(),jom.load_collections(),jom.load_templates(),expect(jom.components.length).toEqual(1),f=jom.components[0],f.define_template(j),expect(f.template).toBeDefined(),expect(f.template).toBe(j),f.define_collection(d),e=f,b=j&&d&&(null!=(h=d.data)?h.length:void 0)?!0:!1,jom.assemble_components(),expect(b).toBe(!0),expect(f.collections).toBeDefined(),expect(f.collections[d.name]).toBe(d),expect(f.collections[d.name].data).toBeDefined(),expect(f.collections[d.name].data).toEqual(g),expect(d).toBeDefined(),expect(d.data).toEqual(g),f.template.clone(),expect(f.template.cloned).not.toEqual(null),expect(f.collections[d.name].findByPath("[0].name")).toEqual("valtid"),expect(f.ready).toBe(!0)})}),describe("disabled, ",function(){return it("should be enabled",function(){var a,b;return a="<component template=profile collections=profile />",b=new Component(a),expect(b.enable()).toBe(!1)}),it("should be enabled",function(){var a,b;return a="<component template=profile collections=profile />",b=new Component(a),expect(b.disable()).toBe(!0)})}),describe("watch_collections, ",function(){return beforeEach(function(a){return setTimeout(function(){return a()},1)}),it("should not watch if it's already watched",function(){var a,b,c,d;return d=[{name:"valtid"}],b=new Collection("profile",d),jom.collections.profile=b,a="<component template=profile collections=profile />",expect($("body>component").length).toEqual(0),$("body").append(a),jom.load_components(),expect($("body>component").length).toEqual(1),expect(jom.components.length).toEqual(1),jom.watch_collections(),c=jom.components[0],c.trigger=function(a,b){return expect(jom.components.length).toEqual(1),expect(b.path).toBe("[0].name"),expect(b.value).toBe("Tom")},b.data[0].name="Tom"})})});var person,result,xcollection;xcollection={Collection:{profile:[{name:"Valtid",age:"26"}]}},person={age:18,name:{birth:{first:"Valtid",last:"Caushi"},current:{first:"Lee",last:"Mack"}},children:["Tom","Ben","Mike"],mixed:["Manchester","London",{town:"barnet",interests:["Museum","Library","Football"]},"liverpool"]},result=null,new Observe(person,function(a){var b,c,d;d=[];for(c in a)b=a[c],d.push(result=b);return d}),new Observe(xcollection.Collection,function(a){var b,c,d;d=[];for(c in a)b=a[c],d.push(result=b);return d}),describe("Observer",function(){return beforeEach(function(a){return setTimeout(function(){return result=null,a()},1)}),it("should fail and throw if no root",function(a){return expect(function(){return new Observe}).toThrow(new Error("Observe: Object missing.")),a()}),it("should fail and throw if no callback",function(a){return expect(function(){return new Observe(person)}).toThrow(new Error("Observe: Callback should be a function.")),a()}),it("should notify age change",function(a){return person.age=1,setTimeout(function(){return expect(result).not.toBe(null),expect(result.path).toBe("age"),expect(result.value).toBe(1),a()},1)}),it("should notify when array is popped",function(a){return person.children.pop(),setTimeout(function(){return expect(result).not.toBe(null),expect(result.path).toBe("children[2]"),expect(result.value[0]).toBe("Tom"),expect(result.value[1]).toBe("Ben"),a()},1)}),it("should notify when array is pushed",function(a){return person.children.push("Joe"),setTimeout(function(){return expect(result).not.toBe(null),expect(result.path).toBe("children[2]"),expect(result.value).toBe("Joe"),a()},1)}),it("should notify when array is modified directly",function(a){return person.children[2]="Kim",setTimeout(function(){return expect(result).not.toBe(null),expect(result.path).toBe("children[2]"),expect(result.value).toBe("Kim"),a()},1)}),it("should notify when array is sorted",function(a){return person.children.sort(),setTimeout(function(){return expect(result).not.toBe(null),expect(person.children[0]).toBe("Ben"),expect(person.children[1]).toBe("Kim"),expect(person.children[2]).toBe("Tom"),a()},1)}),it("should notify when deep chanin",function(a){return person.name.birth.first="Valtido",setTimeout(function(){return expect(result).not.toBe(null),expect(result.path).toBe("name.birth.first"),expect(result.value).toBe("Valtido"),a()},1)}),it("should notify when adding deep chanin",function(a){return person.name.birth.middle="Blah",setTimeout(function(){return expect(result).not.toBe(null),expect(result.path).toBe("name.birth.middle"),expect(result.value).toBe("Blah"),a()},1)}),it("should notify when adding an object",function(a){return person.hair={color:"brown"},setTimeout(function(){return expect(result).not.toBe(null),expect(result.path).toBe("hair"),expect(result.value.color).toBe("brown"),a()},1)}),it("should notify when changing a complex deep object",function(a){return person.mixed[2].interests[2]="Music Festival",setTimeout(function(){return expect(result).not.toBe(null),expect(result.path).toBe("mixed[2].interests[2]"),expect(result.value).toBe("Music Festival"),a()},1)}),it("should notify when pushing into a deep chanin",function(a){var b;return b={alternatives:["Music_Festival",{tv:"bbc"}]},person.mixed[2].interests.push(b),setTimeout(function(){return expect(result).not.toBe(null),expect(result.path).toBe("mixed[2].interests[3]"),expect(result.value.alternatives[1].tv).toBe("bbc"),a()},1)}),it("should notify when changing a deep complex obj in the future",function(a){return person.mixed[2].interests[3].alternatives[1].tv="ITV",setTimeout(function(){return expect(result).not.toBe(null),expect(result.path).toBe("mixed[2].interests[3].alternatives[1].tv"),expect(result.value).toBe("ITV"),a()},1)}),it("should notify when changing a deep super complex future obj",function(a){return xcollection.Collection.profile.push({name:"Ton",age:18}),setTimeout(function(){return expect(result).not.toBe(null),expect(result.path).toBe("profile[1]"),expect(result.value.name).toBe("Ton"),expect(result.value.age).toBe(18),a()},1)}),it("should notify when changing a deep super complex future obj 2",function(a){return xcollection.Collection.profile[1].name="Tom",setTimeout(function(){return expect(result).not.toBe(null),expect(result.path).toBe("profile[1].name"),expect(result.value).toBe("Tom"),a()},1)})}),describe("schemas: ",function(){return it("should have properties",function(){var a,b;return a={name:{first:"Valtid",last:"Caushi"}},b=new Schema("user",a),expect(b.name).toBeDefined(),expect(b.description).toBeDefined(),expect(b.tree).toBeDefined()})});var s;s="",describe("Shadow",function(){return beforeEach(function(){return s="",$("foot").html(""),$("body").html(""),$("head link[rel=asset]").remove(),$("component").remove()}),it("Should exist",function(){return expect(Shadow).toBeDefined()}),it("Should not throw errors",function(){return expect(function(){return s=new Shadow}).not.toThrow()}),it("Should have properties defined",function(){return s=new Shadow,expect(s.root).toBeDefined(),expect(s.body).toBeDefined(),expect(s.host).toBeDefined(),expect(s.traverseAncestry).toBeDefined()}),it("Should test traverseAncestry",function(){var a,b,c,d;return window.sh="valtid",s="<script> window['sh'] = new Shadow();</script>",d=$("<template>"+s+"</template>"),b=$("<component />").get(0),$(b).appendTo(document.body),void 0===b.createShadowRoot&&(b=wrap(b)),c=b.createShadowRoot(),a=document.importNode(d.get(0).content,!0),c.appendChild(a),sh.root=b.shadowRoot,sh.traverseAncestry({parentNode:c}),expect(sh.host.tagName.toLowerCase()).toBe("component")}),it("Should test traverseAncestry",function(){var a,b,c,d;return window.sh="valtid",s="<script> window['sh'] = new Shadow();</script>",d=$("<template>"+s+"</template>"),b=$("<component template=t collection=c />").get(0),$(b).appendTo(document.body),void 0===b.createShadowRoot&&(b=wrap(b)),c=b.createShadowRoot(),a=document.importNode(d.get(0).content,!0),c.appendChild(a),sh.root=b.shadowRoot,sh.traverseAncestry(null),expect(sh.host.tagName.toLowerCase()).toBe("component")})});var t,template;t="",template="",describe("Template",function(){return beforeEach(function(){return t="",template=""}),it("should exist",function(){return expect(Template).toBeDefined()}),it("should have properties",function(){return t="<template name=user schemas='users'><div body></div></template>",template=new Template(t),expect(template.name).toBeDefined(),expect(template.element).toBeDefined(),expect(template.body).toBeDefined(),expect(template.schemas).toBeDefined()}),it("should throw error if no arguments",function(){return expect(function(){return template=new Template}).toThrow(new Error("jom: template is required"))}),it("should throw error if no name found",function(){return t="<template></template>",expect(function(){return template=new Template(t)}).toThrow(new Error("jom: template name attr is required"))}),it("should throw error if no schema found",function(){return t="<template name=profile><div body> My text </div> </template>",expect(function(){return template=new Template(t)}).toThrow(new Error("jom: template schemas attr is required"))}),it("should throw error if no body found",function(){return t="<template name=profile> <div> My text </div> </template>",expect(function(){return template=new Template(t)}).toThrow(new Error("jom: template body attr is required"))}),it("should produce a clone of the template",function(){return t="<template name=user schemas=users><div body></div></template>",template=new Template(t),template.clone(),expect(template.cloned).toBeDefined(),expect(template.cloned).not.toEqual(null)}),describe("template schemas,",function(){return it("should require the same amount of schemas",function(){return template=new Template("<template name=user schema=user></template>"),expect(template.schemas_list.length).toBe(1),template=new Template('<template name=user schema="user,comment"></template>'),expect(template.schemas_list.length).toBe(2)})})}),describe("Other things",function(){return it("should cover helper get/set stuff",function(){var a,b;return expect(Function.setter).toBeDefined(),expect(Function.getter).toBeDefined(),expect(Function.property).toBeDefined(),a=function(){function a(a,b){this.firstName=a,this.lastName=b}return a.getter("length",function(){return 1}),a.getter("add",function(){return 5}),a.setter("add",function(a){return this.value=5}),a.property("fullname",{get:function(){return this.firstName+" "+this.lastName},set:function(a){var b;return b=a.split(" "),this.firstName=b[0],
this.lastName=b[1],b}}),a}(),b=new a("Valtid","Caushi"),expect(b.length).toBe(1),b.add=10,expect(b.value).toBe(5),expect(b.firstName).toBe("Valtid"),expect(b.lastName).toBe("Caushi")}),it("should cover jQuery stuff",function(){return expect($.fn.findAll).toBeDefined(),expect($("*").findAll("*")).toBeDefined(),expect($("div").value).toBeDefined(),expect($("div").value("a")).toBeDefined(),expect($("div").value("a",!0)).toBeDefined(),expect($("div").value("a",!1)).toBeDefined(),expect($("div").value("a","woof")).toBeDefined(),expect($("div").value()).not.toBeDefined()})});
//# sourceMappingURL=unit.min.js.map