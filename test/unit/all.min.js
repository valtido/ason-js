/*! jom 0.0.2 |                  @author Valtid Caushi                  @date 11-03-2015 */

describe("Other things",function(){return it("should cover helper get/set stuff",function(){return expect(Function.setter).toBeDefined(),expect(typeof Function.setter).toBe("function"),expect(Function.getter).toBeDefined(),expect(Function.property).toBeDefined()}),it("should cover jQuery stuff",function(){return expect($.fn.findAll).toBeDefined(),expect($("*").findAll("*")).toBeDefined(),expect($("div").value).toBeDefined(),expect($("div").value("a")).toBeDefined()})});var am;am=new AssetManager,describe("Asset Manager",function(){return it("should exist",function(){return expect(am).toBeDefined()}),it("should have properties",function(){return expect(am.update_status).toBeDefined(),expect(am.load).toBeDefined(),expect(am.error).toBeDefined(),expect(am.process).toBeDefined(),expect(am.ready).toBeDefined(),expect(am.image).toBeDefined(),expect(am.html).toBeDefined(),expect(am.template).toBeDefined(),expect(am.json).toBeDefined(),expect(am.collection).toBeDefined(),expect(am.js).toBeDefined(),expect(am.css).toBeDefined(),expect(am.include).toBeDefined()})});var collection;collection={},describe("collections",function(){return beforeEach(function(){return collection={}}),it("should exists",function(){return expect(Collection).toBeDefined()}),it("should have the following properties",function(){var a;return a=[{name:"valtid"}],collection=new Collection("profile",a),expect(collection.attach_data).toBeDefined(),expect(collection.attach_schema).toBeDefined(),expect(collection.is_valid).toBeDefined(),expect(jjv).toBeDefined()}),it("should fail to add a new collection",function(){return expect(function(){return new Collection}).toThrow(new Error("jom: collection name is required"))}),describe("adding",function(){return it("should add a new simple collection",function(){return collection=new Collection("profile"),expect(collection.name).toEqual("profile"),expect(collection.data).toEqual([]),expect(collection.schema).toEqual({}),expect(collection.is_valid()).toEqual(!0)}),it("should add collection with data as array",function(){var a;return a=[{name:"valtid"}],collection=new Collection("profile",a),expect(collection.name).toEqual("profile"),expect(collection.data).toEqual(a),expect(collection.schema).toEqual({}),expect(collection.is_valid()).toEqual(!0)}),it("should add collection with data as object",function(){var a;return a={name:"Valtid"},collection=new Collection("profile",a),expect(collection.name).toEqual("profile"),expect(collection.data).toEqual([a]),expect(collection.schema).toEqual({}),expect(collection.is_valid()).toEqual(!0)})}),describe("collection Schema",function(){return it("should fail to add collection without $schema",function(){var a,b;return a={name:"Valtid"},b={title:"Profile",type:"array",properties:{name:{title:"Name of person",type:"string"}}},collection=new Collection("profile",a,b),expect(function(){return collection.is_valid()}).toThrow(new Error("jom: $schema is missing"))}),it("should add collection with $schema",function(){var a,b;return a={name:"Valtid"},b={$schema:"http://json-schema.org/draft-04/schema#",title:"Profile",type:"array",properties:{name:{title:"Name of person",type:"string"}},required:[]},collection=new Collection("profile",a,b),expect(collection.is_valid()).toEqual(!0)})})});var component;component={},describe("components",function(){return beforeEach(function(){return component={}}),it("should exists",function(){return expect(Component).toBeDefined()}),it("should have properties defined",function(){var a,b,c,d;return d="",a=$("<component />"),b=$("<component template='template_name' />"),c=$("<component template='template_name' collection='collection_name'/>"),expect(function(){var b;return b=new Component(a)}).toThrow(new Error("jom: template is required")),expect(function(){var a;return a=new Component(b)}).toThrow(new Error("jom: collection is required")),expect(function(){return d=new Component(c)}).not.toThrow(new Error("jom: collection is required")),expect(d.transform).toBeDefined()})}),describe("jom",function(){return it("should be defined",function(){return expect(jom).toBeDefined()}),it("Key features to be present",function(){var a;return expect(jom.get_stack).toBeDefined(),expect(jom.get_cache).toBeDefined(),expect(jom.clear_cache).toBeDefined(),expect(jom.clear_stack).toBeDefined(),expect(jom.run_template).toBeDefined(),expect(jom.component).toBeDefined(),expect(jom.template).toBeDefined(),expect(jom.collection).toBeDefined(),expect(jom.asset).toBeDefined(),a=jom.shadow,expect(a).toBeDefined(),expect(window.Root).toBeDefined(),expect(jom.tasks).toBeDefined(),expect(jom.resolve).toBeDefined()}),it("template as an object",function(){return expect(jom.template).toEqual({})}),it("jom path resolver",function(){return expect(jom.resolve("/location")).toBe("/location")}),it("jom clear cache",function(){return jom.clear_cache(),expect(jom.get_cache()).toEqual({template:{},component:{},collection:{}})}),it("jom clear stack",function(){return jom.clear_stack(),expect(jom.get_stack()).toEqual({template:{},component:{},collection:{}})}),it("jom add template",function(){var a,b,c;return expect(jom.template).toEqual({}),expect(Object.keys(jom.template).length).toEqual(0),a="profile",c="<template name=profile><div>Test</div></template>",jom.add_template(c),b=$(c).get(0).outerHTML,expect(Object.keys(jom.template).length).toEqual(1),expect(jom.template.profile.name).toEqual("profile"),expect(jom.template.profile.element.outerHTML).toBe(b)})});
//# sourceMappingURL=all.min.map